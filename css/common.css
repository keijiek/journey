@charset "UTF-8";
/*
# クラス名について
次に挙げるプレフィックス(接頭辞)が付いた class や id は、JavaScriot からも参照しているクラス名です。
それが使われているセレクタや、その中に書かれた設定を変更すると js が正常に動かない可能性があります。
逆に、そうでないものは、class 名も、設定の内容も、自由に変更して大丈夫なはずですし、色の変更など簡単な見た目の変更なら大丈夫なはずです。

- js_
- jssr_

# ブレイクポイント(760px)を変更する場合
次の二つの手順を踏み、数値を合わせなければなりません。
・このファイルの、"@media screen and (max-width: 760px) {}" と書かれている*全て*の箇所の "760" を、変えたい値に書き換える。
・main.js の、175行あたりの、ARGMENTS オブジェクト内の "BREAK_POINT: 760" の "760" を、上で変更したのと同じ値に書き換える。

*/


/* ************************************************************************************************************************************
  Base.
  HTML Element そのものに基礎的な設定を与える。reset.css に追加したい設定を。
*/

body, header, main, footer {
  width: 100%;
}


/* ************************************************************************************************************************************
  全ページ共通のスタイル
*/
/* header, main, footer には直下に inner_wrap を入れる */
.header_inner_wrap {
  max-width: 1920px;
  margin-left: auto;
  margin-right: auto;
}
.main_inner_wrap,
.footer_inner_wrap {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

/* ************************************************************************************************************************************
  <header>の内容物のスタイル
************************************************************************************************************************************ */
.header_flex_container {
  width: 100%;
  display: flex;
  flex-direction: column;
}
/* キーフレーズの position: absolute; を効かせるため */
.header_relative_container {
  width: 100%;
  position: relative;
}


/* ************************************************************************************************************************************
  グローバルバー(ロゴ, メニュー)
*/
.global_bar {
  /* 表示場所の固定 */
  position: fixed;
  /* y座標は上端に固定 */
  top: 0;
  /* x座標は、次のどちらかが適用されていればよいが、ハンバーガーアイコンが右端ぞろえなので、right を適用 */
  /* left: calc(1/2 * calc(100vw - 1200px)); */
  right: calc(1/2 * calc(100vw - 1200px));
  /* 重なり優先度 */
  z-index: 10;

  /* flex, ロゴとメニューを左右に分けるため */
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  /* 大きさ */
  max-width: 1200px;
  width: 100%;
  height: 48px;
  /* 中央寄せ。適用されるが、意味は無さそう */
  margin-right: auto;
  margin-left: auto;
}

/* 1200px を下まわる場合、横方向の表示位置をコンテンツ幅(1200px)に合わせる。 */
@media screen and (max-width: 1200px) {
  .global_bar {
    /* 次のどちらかが適用されていればよい。 */
    left: 0;
    right: 0;
  }
}

/* グローバルバー、小画面時 */
@media screen and (max-width:760px) {
  .global_bar {
    /* height: 48px; */
  }
}

/* ************************************************************************************************************************************
  ロゴ 
*/
/* ロゴのラップdiv */
.global_bar__global_logo {
  /* 重なりの設定 */
  position: absolute;
  top: 0;
  left: 0;
  /* 重なり優先度。重要なのは、グローバルメニューより低くし、メニューのクリックを邪魔しないこと */
  z-index: 11;
  /* サイズ。内側の a がこれに対して100%になる。画像の大きさに応じて変える */
  width: 200px;
  height: 100%;
  /* 確認用ボーダー。いらなくなったら消す */
  border: 1px dotted black ;
}
/* 小画面時のロゴ */
@media screen and (max-width: 760px) {
  .global_bar__global_logo {
    /* width: 120px; */
  }
}
/* ロゴの<a> */
.global_logo__anchor {
  display: block;
  width: 100%;
  height: 100%;
}
/* ロゴのimg */
.global_logo__image {
  object-fit: cover ;
  width: 100%;
  height: 100%;
}

/* ************************************************************************************************************************************
  グローバルメニュー (大画面時)
*/
.global_bar__global_menu {
  /* 大画面では可視 */
  display: block;
  /* absolute 配置, 位置 */
  position: absolute;
  top: 0;
  right: 0;
  /* 重なり優先度。ロゴより高くすること。 */
  z-index: 12;
}
/* 小画面では不可視 */
@media screen and (max-width: 760px) {
  .global_bar__global_menu {
    display: none;
  }
}

/* グローバルメニューのリスト部分<ul>。flex */
.global_menu__list {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

/* グローバルメニューの<li> */
.global_menu__item {
  /* 黒丸を消す */
  list-style: none;
  /* 左にボーダー */
  border-left:  1px solid saddlebrown;
  /* 内容物(<a>)をこの要素いっぱいにするのためのflexボックス化 */
  display: flex;
  /* 内容物(<a>)は、この高さいっぱいに広がる */
  height: 48px;
}
/* 最終要素だけは右にもボーダー */
.global_menu__item:last-child {
  border-right: 1px solid saddlebrown;
}

/*
  グローバルメニューの<a>
*/
/* <a>、基礎 */
.global_menu__anchor {
  /*
    a タグの内容物(テキスト)を中央化する処理。
    1. flex ボックス化し、方向(flex-direction)をy軸方向(column)に指定。
    2. justify-content:center; で、flexの方向軸と交差する軸(=x軸)の方向に中央配置することを指定。
  */
  display: flex;
  flex-direction: column;
  justify-content: center;
  /* 左右に内部の余白 */
  padding-right: 8px;
  padding-left: 8px;
}
/* 見え方の変化に時間をかける transition 設定。 */
.global_menu__anchor {
  transition: all 0.2s linear 0s;
  -webkit-transition: all 0.2s linear 0s;
  -moz-transition: all 0.2s linear 0s;
  -ms-transition: all 0.2s linear 0s;
  -o-transition: all 0.2s linear 0s;
}
/* <a>の文字色や見た目 */
.global_menu__anchor:link,
.global_menu__anchor:visited {
  color: black;
  text-decoration: none;
}
.global_menu__anchor:hover,
.global_menu__anchor:active {
  color: saddlebrown;
  text-decoration: none;
}


/* ************************************************************************************************************************************
  ハンバーガーメメニュー、(ハンバーガーアイコンではなく)
*/
.humburger_menu {
  /* 原則として不可視。js でこれを操作 */
  display: block;
  /* absolute 配置 */
  position: absolute;
  top: 0;
  /* ハンバーガーアイコンの幅だけ右端から離す */
  right: 48px;
  /* 重なり優先度。ロゴ(11)より高く、ハンバーガーアイコン(15)より低く。 */
  z-index: 13;
}

/* li */
.humburger_menu__item {
  /* 黒丸を消す */
  list-style: none;
  /* 上にボーダー */
  border-top:  1px solid saddlebrown;
  /* 内容物(<a>)をこの要素いっぱいにするのためのflexボックス化 */
  display: flex;
  /* 内容物(<a>)は、このサイズいっぱいに広がる */
  height: 32px;
  width: 180px;
  /* 背景色 */
  background-color: rgba(255,255,255,0.7);
}
/* 最終 li には下ボーダー */
.humburger_menu__item:last-child {
  border-bottom: 1px solid saddlebrown;
}

.humburger_menu__anchor {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  text-align: center;
}
.humburger_menu__anchor:link,
.humburger_menu__anchor:visited {
  color: black;
  text-decoration: none;
}
.humburger_menu__anchor:hover,
.humburger_menu__anchor:active {
  color: saddlebrown;
  text-decoration: none;
}




/* ************************************************************************************************************************************
  ハンバーガーアイコン
*/
/* ハンバーガーのラップ */
.humburger_icon__wrap {
  /* 普段は不可視。小画面時に可視化 */
  display: none;
  /* 表示位置固定 */
  position: fixed;
  top: 0;
  right: 0;
  /* カーソル形状を指さし方に */
  cursor: pointer;
  /* 重なり優先度, ロゴ(11)よりも、ハンバーガーメニュー(13)よりも高く */
  z-index: 15;
}
/* ハンバーガー・ラップは、小画面時に可視化 */
@media screen and (max-width: 760px) {
  .humburger_icon__wrap {
    display: block;
  }
}

/* ハンバーガーアイコンの下の文字 */
.humburger_icon__wrap > p {
  text-align: center;
  font-weight: bold;
  font-size: 0.8rem;
}

/* ハンバーガーのアイコン自体 */
.humburger_icon {
  /* 内部の線を絶対配置するため */
  position: relative;
  /* サイズ, これを書き換える場合、ハンバーガーメニュー(.humburger_menu)の right の値や、.global_bar の height や、それに属する要素の height も書き換えた方がよい */
  width: 48px;
  height: 48px;
  /* 背景色 */
  background-color: white;
  /* ボーダー色 */
  border: 1px solid saddlebrown;
}
/* ハンバーガーのアイコン形状、角を丸める */
.humburger_icon {
  border-radius: 5%;
  -webkit-border-radius: 5%;
  -moz-border-radius: 5%;
  -ms-border-radius: 5%;
  -o-border-radius: 5%;
}


/*
  ハンバーガーの線
*/
:root {
  /* ハンバーガーの線の太さ */
  --hambruger-thickness: 4px;
}
.js_humburger_icon__line {
  display: block;
  /* 絶対配置 */
  position: absolute;
  left: 10%;
  /* サイズ */
  height: var(--hambruger-thickness);
  width: 80%;
  /* 色 */
  background-color: saddlebrown;
}
/* 線の角を丸める */
.js_humburger_icon__line {
  border-radius: calc(0.5 * var(--hambruger-thickness));
  -webkit-border-radius: calc(0.5 * var(--hambruger-thickness));
  -moz-border-radius: calc(0.5 * var(--hambruger-thickness));
  -ms-border-radius: calc(0.5 * var(--hambruger-thickness));
  -o-border-radius: calc(0.5 * var(--hambruger-thickness));
}
/* 線の変形に時間をかけさせる */
.js_humburger_icon__line {
  transition: all 0.5s ease 0s;
  -webkit-transition: all 0.5s ease 0s;
  -moz-transition: all 0.5s ease 0s;
  -ms-transition: all 0.5s ease 0s;
  -o-transition: all 0.5s ease 0s;
}

/* 1本目の線の位置 */
.js_humburger_icon__line:nth-child(1) {
  top: calc(20%);
}
/* オープン時の変形 */
.js_humburger_icon__line.js_open:nth-child(1) {
  top: 50%;
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
}

/* 2本目 */
.js_humburger_icon__line:nth-child(2) {
  top: calc(50% - var(--hambruger-thickness)/2);
}
/* オープン時の変形 */
.js_humburger_icon__line.js_open:nth-child(2) {
  opacity: 0;
}

/* 3本目 */
.js_humburger_icon__line:nth-child(3) {
  top: calc(80% - var(--hambruger-thickness));
}
/* オープン時の変形 */
.js_humburger_icon__line.js_open:nth-child(3) {
  top: 50%;
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -o-transform: rotate(45deg);
}


/* ************************************************************************************************************************************
  メインビジュアル
*/
/* メインビジュアルのdiv */
.header__main_visual {
  width: 100%;
  height: 700px;
}
/* メインビジュアル、実際の画像 */
.header__main_visual > img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}
/* 小画面時の変化 */
@media screen and (max-width: 760px) {
  .header__main_visual {
    /* height: 400px; */
  }
}


/* ************************************************************************************************************************************
  キーフレーズ
*/
.header__key_phrase {
  /* absolute 設定と位置 */
  position: absolute;
  bottom: 0;
  left: 2%;
}
.header__key_phrase > div.english_phrase {
  font-size: 3rem;
  line-height: 5rem;
  font-weight: 600;
}
.header__key_phrase > div.japanese_phrase {
  font-size: 3rem;
  line-height: 5rem;
  font-weight: 500;
}

@media screen and (max-width: 760px) {
  .header__key_phrase > div.english_phrase {
    line-height: 3rem;
    font-size: 1.8rem;
  }
  .header__key_phrase > div.japanese_phrase {
    line-height: 3rem;
    font-size: 1.8rem;
  }
}
@media screen and (max-width: 430px) {
  .header__key_phrase > div.english_phrase {
    font-size: 1.5rem;
  }
  .header__key_phrase > div.japanese_phrase {
    font-size: 1.5rem;
  }
}
@media screen and (max-width: 370px) {
  .header__key_phrase > div.english_phrase {
    font-size: 1.3rem;
  }
  .header__key_phrase > div.japanese_phrase {
    font-size: 1.3rem;
  }
}


/* ************************************************************************************************************************************
  ギャラリー

************************************************************************************************************************************ */
/* ギャラリー全体 */
.top_page_gallery {
  width: 100%;
  max-width: 1200px;
  margin-right: auto;
  margin-left: auto;
  /* 確認用のボーダー。後で消す */
  /* border: 1px dotted #333; */
}
/* ギャラリー全体の見出し */
.top_page_gallery__head {
  font-size: 2rem;
  text-align: center;
}

/* ************************************************************************************************************************************
  ギャラリーのパネル
*/
/* パネル共通 */
.gallery_panel {
  width: 100%;
  display: flex;
  margin-bottom: 2%;
}

/* 中央・1枚のパネル*/
.gp__middle_single {
  justify-content: center;
}
/* 左寄せ・2枚のパネル */
.gp__left_aligned {
  justify-content: flex-start;/* 規定値なので不要だが、右寄せとの対比のために */
}
/* 右寄せ・2枚のパネル */
.gp__right_aligned {
  justify-content: flex-end;
}


/* img ラップ, 共通 */
.gp__img_wrap {
  display: block;
}
/* img ラップ, 中央寄せの場合 */
.gp__middle_single > .gp__img_wrap {
  width: 80%;
}
/* img のラップ, 左右寄せの場合 */
.gp__left_aligned > .gp__img_wrap,
.gp__right_aligned > .gp__img_wrap {
  width: 44%;
}
.gp__left_aligned > .gp__img_wrap:first-child,
.gp__right_aligned > .gp__img_wrap:first-child {
  margin-right: 2%;
}

/* img_wrap が<a>の場合 */
a.gp__img_wrap:link,
a.gp__img_wrap:visited {
}
a.gp__img_wrap:hover,
a.gp__img_wrap:active {
}

.gp__img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}